version: "3.7"

services:
  wp-db:
    restart: unless-stopped
    image: mysql:8
    command: "mysqld --default-authentication-plugin=mysql_native_password"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/volumes/data:/data/
      - ./docker/volumes/apps:/apps/
      - ./docker/volumes/conf:/conf/
    environment:
      DOCKER_CONTAINER: 1
      MYSQL_ROOT_PASSWORD: wordpress_root
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
      - localhost-network
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    cap_add:
      - SYS_NICE
  php:
    restart: unless-stopped
    build:
      context: docker
      dockerfile: data/dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    depends_on:
      - wp-db
    working_dir: "/var/www/html"
    volumes:
      - type: bind
        source: ./docker/volumes/conf/dist/php-conf/upload.ini
        target: /usr/local/etc/php/conf.d/upload.ini
      - ./wordpress:/var/www/html
    environment:
      DOCKER_CONTAINER: 1
      WORDPRESS_DB_HOST: wp-db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      _OPCACHE_MAX_ACCELERATED_FILES: 100000
      PHP_OPCACHE_MEMORY_CONSUMPTION: 64
      PHP_OPCACHE_MAX_WASTED_PERCENTAGE: 5
    networks:
      - localhost-network
  web.local:
    restart: unless-stopped
    image: nginx
    environment:
      DOCKER_CONTAINER: 1
    depends_on:
      - php
    volumes:
      - ./docker/volumes/conf/dist/nginx-conf:/etc/nginx/conf.d/
      - ./wordpress:/var/www/html
      - ./var/logs:/var/log/nginx
    extra_hosts:
      - "web.local:127.0.0.1"
    ports:
      - 80:80
      - 443:443
    expose:
      - "80"
      - "443"
    networks:
      - localhost-network
      - localhost-network-shared
networks:
  localhost-network-shared:
    name: localhost-network-shared
    driver: bridge
  localhost-network:
    driver: bridge
volumes:
  mysql-data:
